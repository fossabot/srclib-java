apply plugin: 'java'
apply plugin: 'application'

mainClassName = "com.sourcegraph.javagraph.Main"
version = '4.0.0'
group = 'com.sourcegraph'

repositories {
		mavenCentral()
		maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
}

dependencies {
	compile group:'com.google.code.gson', name:'gson', version:'2.3'
	compile group:'org.apache.commons', name:'commons-lang3', version:'3.3.2'
	compile group:'com.beust', name:'jcommander', version:'1.30'
	compile group:'com.googlecode.json-simple', name:'json-simple', version:'1.1.1'
	compile group:'org.apache.maven', name:'maven-model', version:'3.2.3'
	compile group:'commons-io', name:'commons-io', version:'2.4'

	compile files("${System.properties['java.home']}/../lib/tools.jar")

	testCompile group:'junit', name:'junit', version:'4.10'
}

/*
	Ok! This is a pretty nasty hack to try and collection information
	from a gradle build. Here's some known issues:

		- project.{group,version,name} might not be defined. It's
		possible to generate POM files for the Maven repo with explicit
		values for theses fields. The project._ values are just the
		defaults. Basically, this is a flakey heuristic, and it remains
		to be seen if it will work well for gradle projects in general.

			- It might be possible to actually ask gradle to
			generate the pom files, and then inspect those. This
			is what we're doing for dependencies that we pull
			from the maven repository. However! I'm not sure if
			there's a sane way to request this, or if that approach
			will work for gradle projects in general.
*/
task srclibCollectMetaInformation << {
	String desc = project.description
	if (desc == null) { desc = "" }
	println "DESCRIPTION $desc"
	println "GROUP $project.group"
	println "VERSION $project.version"
	println "ARTIFACT $project.name"
	println "CLASSPATH $configurations.runtime.asPath"

	project.configurations.each { conf ->
		conf.resolvedConfiguration.getResolvedArtifacts().each {
			String group = it.moduleVersion.id.group
			String name = it.moduleVersion.id.name
			String version = it.moduleVersion.id.version
			String file = it.file
			println "DEPENDENCY $conf.name:$group:$name:$version:$file"
		}
	}
}
